// Generated by https://quicktype.io

export interface AttractionsSearchResults {
  _embedded: _embeded;
  _links: _links;
  page: Page;
}

export interface _embeded {
  attractions: Event[];
}

export interface Event {
  name: string;
  type: string;
  id: string;
  test: boolean;
  url: string;
  locale: string;
  images: Image[];
  sales: Sales;
  dates: Dates;
  classifications: Classification[];
  promoter: Promoter;
  promoters: Promoter[];
  info: string;
  pleaseNote: string;
  priceRanges: PriceRange[];
  products: Product[];
  seatmap: Seatmap;
  accessibility: Accessibility;
  ticketLimit: TicketLimit;
  ageRestrictions: AgeRestrictions;
  ticketing: Ticketing;
  _links: EventLinks;
  _embedded: EventEmbedded;
}

export interface EventEmbedded {
  venues: Venue[];
  attractions: Attraction[];
}

export interface Attraction {
  name: string;
  type: string;
  id: string;
  test: boolean;
  url: string;
  locale: string;
  externalLinks: ExternalLinks;
  aliases: string[];
  images: Image[];
  classifications: Classification[];
  upcomingEvents: UpcomingEvents;
  _links: AttractionLinks;
}

export interface AttractionLinks {
  self: First;
}

export interface First {
  href: string;
}

export interface Classification {
  primary: boolean;
  segment: Genre;
  genre: Genre;
  subGenre: Genre;
  type: Genre;
  subType: Genre;
  family: boolean;
}

export interface Genre {
  id: string;
  name: string;
}

export interface ExternalLinks {
  youtube: Facebook[];
  twitter: Facebook[];
  itunes: Facebook[];
  lastfm: Facebook[];
  facebook: Facebook[];
  wiki: Facebook[];
  spotify: Facebook[];
  musicbrainz: Musicbrainz[];
  instagram: Facebook[];
  homepage: Facebook[];
}

export interface Facebook {
  url: string;
}

export interface Musicbrainz {
  id: string;
}

export interface Image {
  ratio: Ratio;
  url: string;
  width: number;
  height: number;
  fallback: boolean;
}

export enum Ratio {
  The16_9 = '16_9',
  The1_1 = '1_1',
  The3_2 = '3_2',
  The4_3 = '4_3',
}

export interface UpcomingEvents {
  ticketmaster: number;
  _total: number;
  _filtered: number;
}

export interface Venue {
  name: string;
  type: string;
  id: string;
  test: boolean;
  url: string;
  locale: string;
  images: Image[];
  postalCode: string;
  timezone: string;
  city: City;
  state: State;
  country: Country;
  address: Address;
  location: Location;
  markets: Genre[];
  dmas: DMA[];
  upcomingEvents: UpcomingEvents;
  _links: AttractionLinks;
}

export interface Address {
  line1: string;
}

export interface City {
  name: string;
}

export interface Country {
  name: string;
  countryCode: string;
}

export interface DMA {
  id: number;
}

export interface Location {
  longitude: string;
  latitude: string;
}

export interface State {
  name: string;
  stateCode: string;
}

export interface EventLinks {
  self: First;
  attractions: First[];
  venues: First[];
}

export interface Accessibility {
  ticketLimit: number;
}

export interface AgeRestrictions {
  legalAgeEnforced: boolean;
}

export interface Dates {
  start: Start;
  timezone: string;
  status: Status;
  spanMultipleDays: boolean;
}

export interface Start {
  localDate: string;
  localTime: string;
  dateTime: string;
  dateTBD: boolean;
  dateTBA: boolean;
  timeTBA: boolean;
  noSpecificTime: boolean;
}

export interface Status {
  code: string;
}

export interface PriceRange {
  type: string;
  currency: string;
  min: number;
  max: number;
}

export interface Product {
  name: string;
  id: string;
  url: string;
  type: string;
  classifications: Classification[];
}

export interface Promoter {
  id: string;
  name: string;
  description: string;
}

export interface Sales {
  public: Public;
}

export interface Public {
  startDateTime: string;
  startTBD: boolean;
  startTBA: boolean;
  endDateTime: string;
}

export interface Seatmap {
  staticUrl: string;
}

export interface TicketLimit {
  info: string;
}

export interface Ticketing {
  safeTix: AllInclusivePricing;
  allInclusivePricing: AllInclusivePricing;
}

export interface AllInclusivePricing {
  enabled: boolean;
}

export interface _links {
  first: First;
  self: First;
  next: First;
  last: First;
}

export interface Page {
  size: number;
  totalElements: number;
  totalPages: number;
  number: number;
}
